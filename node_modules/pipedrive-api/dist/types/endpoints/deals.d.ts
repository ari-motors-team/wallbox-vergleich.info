export default class Deals {
    private baseUrl;
    private authToken;
    constructor(authToken: string);
    all(params?: {
        userId?: number;
        filterId?: number;
        stageId?: number;
        status?: number;
        start?: number;
        limit?: number;
        sort?: string;
        ownedByYou?: number;
    }): Promise<any>;
    find(params: {
        term: string;
        personId?: number;
        organizationId?: number;
        exactMatch?: boolean;
        status?: string;
        fields: string;
        includeFields: string;
        start?: number;
        limit?: number;
    }): Promise<any>;
    timeline(params: {
        startDate: string;
        interval: number;
        amount: number;
        fieldKey: string;
        userId?: number;
        pipelineId?: number;
        filterId?: number;
        excludeDeals?: number;
        totalConvertCurrency?: string;
    }): Promise<any>;
    get(params: {
        id: number;
    }): Promise<any>;
    add(params: {
        title: string;
        value?: string;
        currency?: string;
        userId?: number;
        personId?: number;
        orgId?: number;
        pipelineID?: number;
        stageId?: number;
        status?: number;
        probability?: number;
        lostReason?: string;
        addTime?: string;
        visibleTo?: number;
    }): Promise<any>;
    update(params: {
        id: number;
        title?: string;
        value?: string;
        currency?: string;
        userId?: number;
        personId?: number;
        orgId?: number;
        stageId?: number;
        status?: number;
        probability?: number;
        lostReason?: string;
        addTime?: string;
        visibleTo?: number;
    }): Promise<any>;
}
